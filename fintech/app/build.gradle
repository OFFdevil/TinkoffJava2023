/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation("org.springframework.boot:spring-boot-starter")
    implementation("com.h2database:h2:1.4.195")
    compileOnly("org.projectlombok:lombok:1.16.12")
    annotationProcessor("org.projectlombok:lombok:1.16.12")
    implementation("ch.qos.logback:logback-classic:1.4.8")

    implementation("org.springframework.boot:spring-boot-starter-web:3.1.2")
    implementation("org.liquibase:liquibase-core:4.23.0")
}

application {
    // Define the main class for the application.
    mainClass = 'fintech.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fintech.App'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}